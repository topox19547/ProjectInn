Exchanged info

Game creation:
Client : gameName, playername, password, starting map object
Server : game ID
Client : {
	Status : "CREATE_GAME"
	gameName : string
	playername : string
	password : string
	asset : {
		assetID : number
		assetURL : url string
		assetName : string
	}
}

Server : {
	same as game join response
}

Game join:
Client : name, gameID, password? (if required)
Server : gameName, playerList, playerIdentity, Map, Token (maybe game file?)
Client : {
	Status : "JOIN_GAME"
	ID : gameID
	password : string
}
Server : {
	Status : "
}

Token moved:
Client : tokenID?, new position
Server : tokenID, new position (broadcast to all) / ERROR
Client : {
	Status : "TOKEN_MOVED"
	ID : number
	position : Vector2
}
Server : {
	Status : "TOKEN_MOVED"
	ID : number
	position : Vector2
} (always broadcasted to everyone)

Token moving:
Client : tokenID?, new position
Server : tokenID, new position (broadcast to all) / ERROR
Client : {
	Status : "TOKEN_MOVING"
	ID : number
	position : Vector2
}
Server : {
	Status : "TOKEN_MOVING"
	ID : number
	position : Vector2
} (always broadcasted to everyone)

New token:
Client : tokenType, spawn position
Server : replicate, broadcasting to everyone / ERROR
Client : {
	Status : "TOKEN"
	Command : "CREATE"
	assetID : number
	position : Vector2
}
Server : {
	Status : "TOKEN"
	Command : "CREATE"
	assetID : number
	tokenID : number
	position : Vector2
}

Deleted token
Client : TokenID
Server : TokenID / ERROR
Client : {
	Status : "TOKEN"
	Command : "DELETE"
	ID : number
}
Server : {
	Status : "TOKEN"
	Command : "DELETE"
	ID : number
}


Token ownership update:
Client : tokenID, user, state
Server : replicate to everyone / ERROR
Client : {
	Status : "TOKEN"
	ID : number
	Username : string
	state : bool
}
Server : {
	Status : "TOKEN"
	ID : number
	Username : string
	state : bool
}

Token attribute added / modified:
Client : tokenAttribute, tokenID, status (added/removed)
Server : replicate, broadcasting to everyone / ERROR
Client : {
	Status : "TOKEN_ATTRIBUTE"
	Command : "SAFE_MODIFY"
	TokenID : number
	AttributeName : string
	value : number
	max : number
	min : number
}
Server : {
	Status : "TOKEN_ATTRIBUTE"
	Command : "SAFE_MODIFY"
	TokenID : number
	AttributeName : string
	value : number
	max : number
	min : number
}

Token attribute removed :
Client : {
	Status : "TOKEN_ATTRIBUTE"
	Command : "DELETE"
	TokenID : number
	AttributeName : string
}
Server : {
	Status : "TOKEN_ATTRIBUTE"
	Command : "DELETE"
	TokenID : number
	AttributeName : string
}



new asset / modified asset:
Client : asset URL, name
Server : replicate to people who have token management permissions, TokenTypeID / ERROR
Client : {
	Status : "TOKEN_ASSET / SCENE_ASSET"
	Command : "SAFE_MODIFY"
	AssetID : number
	AssetURL : url string
}
Server : {
	Status : "TOKEN_ASSET / SCENE_ASSET"
	Command : "SAFE_MODIFY"
	AssetID : number
	AssetURL : url string
	AssetSize : Vector2 (for placeholder asset when client can't load URL)
}

deleted asset:
Client : {
	Status : "(type) ASSET"
	Command : "DELETE"
	AssetID : number
}
Server : {
	Status : "(type) ASSET"
	Command : "DELETE"
	AssetID : number
}

Global permission update:
Client : User, permission, BOOL
Server : replicate to the user + to all masters / ERROR
Client : {
	Status : "PERMISSIONS"
	Username : string
	Permission : permission
	Status : bool
}
Server : {
	Status : "PERMISSIONS"
	Username : string
	Permission : permission
	Status : bool
}

Scene changed:
Client : asset, offset, various map fuckery
Server : replicate to everyone / ERROR
Client : {
	Status : "SCENE_CHANGED"
	AssetID : number
	gridType : GridType
	offset : Vector2
	tileSize : number
}

Chat message:
Client : message
Server : replicate to everyone
Client : {
	Status : "CHAT"
	message : string
}
Server : {
	Status : "CHAT"
	message : string
	sender : string
}

Map ping:
Client : coordinates
Server : replicate to everyone
Client : {
	Status : "MAP_PING"
	position : Vector2
}
Server : {
	Status : "MAP_PING"
	position : Vector2
	sender : string
}

Error:
Server :
{
	Status : "ERROR"
	Type : "ANY STATUS"
}

Image missing error:
Sent from the server when an image couldn't be loaded

Ping (obvious)

message structure:
{
	STATUS: one of the statuses above
	CONTENT...
}

messages could be built using builder pattern


Things that will require serialization/deserialization
TokenAttributes




Possible ways to handle save
- JSON + file URLs (chosen, for now)
- JSON + base64 images
- IndexedDB (kinda weird)
